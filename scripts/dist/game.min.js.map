{"version":3,"sources":["game.js"],"names":["levelTitle","document","getElementById","greenButton","redButton","colors","gameSequence","playerSequence","level","sounds","green","Audio","red","yellow","blue","wrong","startGame","nextRound","textContent","concat","addToSequence","playSequence","disableButtons","Math","floor","random","push","randomColor","playSound","i","clearInterval","enableButtons","color","length","intervalId","gameStarted","checkSequence","animateButton","button","boxShadow","backgroundColor","style","setTimeout","alert","index","body","classList","add","remove","blueButton","disabled","yellowButton","addEventListener","handleButtonClick"],"mappings":"aACA,IAAMA,WAAaC,SAASC,eAAe,eAD3CC,YAAAF,SAAAC,eAAA,SACMF,UAAaC,SAASC,eAAe,OACrCC,aAAcF,SAASC,eAAe,UACtCE,WAAYH,SAASC,eAAe,QAKpCG,OAAS,CAAC,QAAS,MAAO,SAAU,QAApCA,aAAU,GACZC,eAAJ,GACIC,MAAAA,EACAC,aAAJ,EAIMC,OAAS,CACbC,MAAO,IAAIC,MAAM,8BACjBC,IAAK,IAAID,MAAM,4BACfE,OAAQ,IAAIF,MAAM,+BAClBG,KAAM,IAAIH,MAAM,6BAChBI,MAAO,IAAIJ,MAAM,+BAkClB,SAEDK,YAPEV,aAAe,GACfC,eAAiB,GAOnBC,MAASS,EACPjB,aAAWkB,EACXX,YAFF,SAASU,YACPjB,WAAWkB,YAAX,SAAAC,OAAkCX,OAOpCD,eAASa,GACPA,gBACAd,eAIF,SAASe,gBACPC,IAAAA,EAAcjB,OAAAkB,KAAAC,MAAA,EAAAD,KAAAE,WACdnB,aAAAoB,KAAAC,GAIEC,SAAAA,eACAC,iBALF,IAAIA,EAAI,EAMFA,EAAKvB,YAAT,WACEwB,IAAAA,EAAAA,aAAAD,GACAE,cAAAA,GACDH,UAAAI,KAR2BH,GAYhCvB,aAAA2B,SANMH,cAAcI,GACdH,kBAOJ,KAIEH,SAAAA,kBAAAI,GACDG,cAGH5B,eAAAmB,KAAAM,GANII,gBACAC,cAAcL,GAMlBJ,UAASA,IAAT,SAASA,UAAUI,GAMnBvB,OAAS4B,GAAAA,YAAqB,EAC5B5B,OAAM6B,GAASrC,OAIbqC,SAAAA,cAAaC,GACbD,IAAAA,EAAaE,SAAAA,eAAbR,GACDM,EAHDG,MAAAF,UAAA,iBAMFD,EAAAG,MAAAD,gBAAA,OANEE,WAAW,WACTJ,EAAOG,MAAMF,UAAY,GAM7BD,EAASF,MAAAA,gBAAgBJ,GACvB,KAGC,SAAMI,gBACL,IAAI5B,EAAKD,eAAQ0B,OAAA,EACfU,eAAMC,KAAAtC,aAANsC,GACAT,UACAnC,eAAAiC,SAAyB3B,aAAA2B,SACpB,IAJPzB,OAKEA,MAAK,6BACLkC,aAAWzB,EACZjB,WAAAkB,YAAA,6BAILV,QALMkC,WAAWzB,UAAW,OAU1BW,SAAAA,UACAc,aAAW,EACTzC,WAAS4C,YAAT,sCACD5C,SAFD4C,KAAAC,UAAAC,IAAA,aAKFnB,UAAA,SALEc,WAAW,WACTzC,SAAS4C,KAAKC,UAAUE,OAAO,cAKnC,KAIEC,SAAAA,gBAGF9C,YAAA+C,UAAA,EALE9C,UAAU8C,UAAW,EACrBC,aAAaD,UAAW,EAK1BD,WAAS3B,UAAT,EAIE2B,SAAAA,iBACD9C,YAAA+C,UAAA,EAHC9C,UAAU8C,UAAW,EACrBC,aAAaD,UAAW,EACxBD,WAAWC,UAAW,EAjItBjD,SAAKkC,iBAAa,UAAA,WAChBnB,aACDA,cAMFb,YAFDiD,iBAAA,QAAA,WAIAhD,kBAAUgD,WAIVD,UAAAA,iBAAaC,QAAiB,WAC5BC,kBAAkB,SAIlBA,aAAAA,iBAAA,QAAA,WADFA,kBAIA,YAEE/C,WAAAA,iBAAA,QAAA,WACAC,kBAAiB","file":"game.min.js","sourcesContent":["// Select elements\nconst levelTitle = document.getElementById(\"level-title\");\nconst greenButton = document.getElementById(\"green\");\nconst redButton = document.getElementById(\"red\");\nconst yellowButton = document.getElementById(\"yellow\");\nconst blueButton = document.getElementById(\"blue\");\n\n// Colors and game variables\nconst colors = [\"green\", \"red\", \"yellow\", \"blue\"];\nlet gameSequence = [];\nlet playerSequence = [];\nlet level = 0;\nlet gameStarted = false;\n\n// Sounds\nconst sounds = {\n  green: new Audio(\"../assets/sounds/green.mp3\"),\n  red: new Audio(\"../assets/sounds/red.mp3\"),\n  yellow: new Audio(\"../assets/sounds/yellow.mp3\"),\n  blue: new Audio(\"../assets/sounds/blue.mp3\"),\n  wrong: new Audio(\"../assets/sounds/wrong.mp3\"),\n};\n\n// Event listener for key press to start the game\ndocument.addEventListener(\"keydown\", function () {\n  if (!gameStarted) {\n    startGame();\n  }\n});\n\n// Event listeners for color buttons\ngreenButton.addEventListener(\"click\", function () {\n  handleButtonClick(\"green\");\n});\n\nredButton.addEventListener(\"click\", function () {\n  handleButtonClick(\"red\");\n});\n\nyellowButton.addEventListener(\"click\", function () {\n  handleButtonClick(\"yellow\");\n});\n\nblueButton.addEventListener(\"click\", function () {\n  handleButtonClick(\"blue\");\n});\n\n// Function to start the game\nfunction startGame() {\n  gameSequence = [];\n  playerSequence = [];\n  level = 1;\n  gameStarted = true;\n  nextRound();\n}\n\n// Function to generate the next round\nfunction nextRound() {\n  levelTitle.textContent = `Level ${level}`;\n  playerSequence = [];\n  addToSequence();\n  playSequence();\n}\n\n// Function to generate a random color and add it to the sequence\nfunction addToSequence() {\n  const randomColor = colors[Math.floor(Math.random() * 4)];\n  gameSequence.push(randomColor);\n}\n\n// Function to play the current sequence\nfunction playSequence() {\n  disableButtons();\n  let i = 0;\n  const intervalId = setInterval(function () {\n    const color = gameSequence[i];\n    animateButton(color);\n    playSound(color);\n    i++;\n    if (i >= gameSequence.length) {\n      clearInterval(intervalId);\n      enableButtons();\n    }\n  }, 500);\n}\n\n// Function to handle button clicks\nfunction handleButtonClick(color) {\n  if (gameStarted) {\n    playerSequence.push(color);\n    checkSequence();\n    animateButton(color);\n    playSound(color);\n  }\n}\n\n// Function to play sound for a given color\nfunction playSound(color) {\n  sounds[color].currentTime = 0;\n  sounds[color].play();\n}\n\n// Function to animate button click\nfunction animateButton(color) {\n  const button = document.getElementById(color);\n  button.style.boxShadow = \"0 0 20px white\";\n  button.style.backgroundColor = \"grey\";\n  setTimeout(() => {\n    button.style.boxShadow = \"\";\n    button.style.backgroundColor = color;\n  }, 100);\n}\n\n// Function to check if the player's sequence matches the game sequence\nfunction checkSequence() {\n  const index = playerSequence.length - 1;\n  if (playerSequence[index] !== gameSequence[index]) {\n    endGame();\n  } else if (playerSequence.length === gameSequence.length) {\n    if (level === 5) {\n      alert(\"Congratulations! You won!\");\n      gameStarted = false;\n      levelTitle.textContent = \"Press Any Key to Restart\";\n    } else {\n      level++;\n      setTimeout(nextRound, 500);\n    }\n  }\n}\n\n// Function to end the game\nfunction endGame() {\n  gameStarted = false;\n  levelTitle.textContent = \"Game Over, Press Any Key to Restart\";\n  document.body.classList.add(\"game-over\");\n  playSound(\"wrong\");\n  setTimeout(() => {\n    document.body.classList.remove(\"game-over\");\n  }, 200);\n}\n\n// Function to enable color buttons\nfunction enableButtons() {\n  greenButton.disabled = false;\n  redButton.disabled = false;\n  yellowButton.disabled = false;\n  blueButton.disabled = false;\n}\n\n// Function to disable color buttons\nfunction disableButtons() {\n  greenButton.disabled = true;\n  redButton.disabled = true;\n  yellowButton.disabled = true;\n  blueButton.disabled = true;\n}\n"]}